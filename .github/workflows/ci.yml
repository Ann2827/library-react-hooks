name: 'CI'
on:
  push:
#    branches-ignore:
#      - 'main'
#  pull_request:
#    types: [opened, closed]

jobs:
  build:
    if: github.event_name == 'push'
#      (github.event_name == 'pull_request' && github.event.action == 'opened'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

#      - name: Cache Node Modules
#        continue-on-error: false
#        id: cache
#        uses: actions/cache@v3.0.1
#        with:
#          path: ./node_module
#          key: ${{ runner.os }}-nodeModules

      - name: Install
#        if: steps.cache.outputs.cache-hit != 'true'
        continue-on-error: false
        run: yarn install --immutable --immutable-cache --check-cache

#      - name: Cache Node Modules
#        continue-on-error: false
#        id: exampleCache
#        uses: actions/cache@v3.0.1
#        with:
#          path: ./example/node_module
#          key: ${{ runner.os }}-exampleNodeModules

      - name: Install Example
#        if: steps.exampleCache.outputs.cache-hit != 'true'
        continue-on-error: false
        run: |
          cd example
          yarn install --immutable --immutable-cache --check-cache

      - name: Test
        continue-on-error: false
        run: yarn test

      - name: Build Library
        continue-on-error: false
        run: yarn build

      - name: Author
        continue-on-error: false
        run: |
          cd example
          git config --local user.email "ann.bystrova96@mail.ru"
          git config --local user.name "Ann Bystrova"

      - name: Build Example
        continue-on-error: false
        run: yarn predeploy

      - name: Upload Artifacts for GitHub Pages
        continue-on-error: false
        uses: actions/upload-artifact@v3
        with:
          name: githubPages
          path: ./example/build
          retention-days: 1

      - name: Upload Artifacts for Library
        uses: actions/upload-artifact@v3
        with:
          name: library
          path: ./dist
          retention-days: 1

  deploy:
    needs: build
    if: github.event_name == 'push' && contains(github.ref, '/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Download Artifacts for GitHub Pages
        continue-on-error: false
        uses: actions/download-artifact@v3
        with:
          name: githubPages
          path: ./example/build

      - name: Deploy to GitHub Pages
        continue-on-error: false
        uses: Cecilapp/GitHub-Pages-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          email: ann.bystrova96@mail.ru
          build_dir: example/build

      - name: Download Artifacts for Library
        continue-on-error: false
        uses: actions/download-artifact@v3
        with:
          name: library
          path: ./dist

#      - name: Install semantic-release
#        continue-on-error: false
#        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn add @semantic-release/git -D
          npm_config_yes=true npx semantic-release

#  deploy2:
#    if: github.event_name == 'push' && contains(github.ref, '/main')
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '16'
#
#      - name: Install
#        continue-on-error: false
#        run: |
#          npm ci
#          cd example
#          npm ci
#
#      - name: Test
#        continue-on-error: false
#        run: npm run test
#
#      - name: Build
#        continue-on-error: false
#        run: npm run build
#
#      - name: Author
#        continue-on-error: false
#        run: |
#          cd example
#          git config --local user.email "ann.bystrova96@mail.ru"
#          git config --local user.name "Ann Bystrova"
#
#      - name: Predeploy
#        continue-on-error: false
#        run: npm run predeploy
#
#      - name: Deploy to GitHub Pages
#        uses: Cecilapp/GitHub-Pages-deploy@v3
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          email: ann.bystrova96@mail.ru
#          build_dir: example/build

#  version:
#    runs-on: ubuntu-latest
#    needs: [ deploy ]
#    outputs:
#      output1: ${{ steps.bump.outputs.newTag }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - name: Automated Version Bump
#        id: bump
#        uses: 'phips28/gh-action-bump-version@master'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          major-wording: 'major:'
#          minor-wording: 'feat:'
#          patch-wording: 'fix:'
#          tag-prefix: 'v'
#          skip-tag: 'true'
#    ${{needs.version.outputs.output1}}

#  changelog:
#    runs-on: ubuntu-latest
#    needs: [ version ]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2

#      - name: Generate changelog
#        continue-on-error: false
#        id: github_changelog
#        uses: mikepenz/release-changelog-builder-action@main
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          configuration: "configs/configuration_changelog.json"
#
#      - name: Write changelog
#        continue-on-error: false
#        uses: stefanzweifel/changelog-updater-action@v1
#        with:
#          latest-version: ${{ steps.github_changelog.outputs.toTag }}
#          release-notes: ${{ steps.github_changelog.outputs.changelog }}
#
#      - name: Commit updated CHANGELOG
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          branch: develop
#          commit_message: Update CHANGELOG
#          file_pattern: CHANGELOG.md

#      - name: Run Changelog CI
#        uses: saadmk11/changelog-ci@v1.0.0
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}

#      - name: "✏️ Generate full changelog"
#        id: generate-full-changelog
#        uses: heinrichreimer/github-changelog-generator-action@v2.3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          headerLabel: "# 📑 Changelog"
#          breakingLabel: '### 💥 Breaking'
#          enhancementLabel: '### 🚀 Enhancements'
#          bugsLabel: '### 🐛 Bug fixes'
#          deprecatedLabel: '### ⚠️ Deprecations'
#          removedLabel: '### 🔥 Removals'
#          securityLabel: '### 🛡️ Security'
#          issuesLabel: '### 📁 Other issues'
#          prLabel: '### 📁 Other pull requests'
#          addSections: '{"documentation":{"prefix":"### 📖 Documentation","labels":["docs"]},"tests":{"prefix":"### ✅ Testing","labels":["tests"]}}'
#          issues: true
#          issuesWoLabels: true
#          pullRequests: true
#          prWoLabels: true
#          author: true
#          unreleased: true
#          compareLink: true
#          stripGeneratorNotice: true
#          verbose: true
#
#      - name: "🖨️ Print changelog to console"
#        run: cat CHANGELOG.md
#
#      - name: "📤 Upload changelog"
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: "Changelog"
#          path: CHANGELOG.md






#  release:
#    runs-on: ubuntu-latest
#    needs: [ changelog ]
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Generate changelog
#        id: github_changelog
#        uses: mikepenz/release-changelog-builder-action@main
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          configuration: "configs/configuration_release.json"
#
#      - name: Create Release
#        uses: ncipollo/release-action@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag: ${{ steps.github_changelog.outputs.toTag }}
#          name: ${{ steps.github_changelog.outputs.toTag }}
#          body: ${{steps.github_release.outputs.changelog}}
#          owner: Ann2827
#          repo: library-react-hooks
#          token: ${{ secrets.GITHUB_TOKEN }}

#  publish:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2


# Some Helper Artifacts

#      - name: Commit changelog
#        run: |
#          git config --local user.email "ann.bystrova96@mail.ru"
#          git config --local user.name "Ann Bystrova"
#          git add CHANGELOG.md && git commit -m 'Updated CHANGELOG.md' && echo "push=true" >> $GITHUB_ENV || echo "No changes to CHANGELOG.md"
#
#      - name: Push changes
#        env:
#          CI_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          git push "https://Ann2827:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:develop


#      - name: Get version
#        continue-on-error: false
#        id: package_version
#        uses: martinbeentjes/npm-get-version-action@master

#    if: github.event_name == 'push' && (
#      startsWith(github.event.head_commit.message, 'feat:') ||
#      startsWith(github.event.head_commit.message, 'fix:') ||
#      startsWith(github.event.head_commit.message, 'major:'))
